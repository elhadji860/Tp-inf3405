import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

public class ClientHandler extends Thread { // pour traiter la demande de chaque client sur un socket particulier
	private Socket socket; 
	private int clientNumber; 
	
	public ClientHandler(Socket socket, int clientNumber) {
		this.socket = socket;
		this.clientNumber = clientNumber; 
		System.out.println("New connection with client#" + this.clientNumber + " at" + socket);
		}
	
	Boolean commandeValide(String commande) {
		
		String listeCommande[] = {"ls", "mkdir"};
		
		for(String val : listeCommande) {
			if (commande.contains(val)) {
				return true;
			}
		}
		
		return false;
	}
	
	public void run() { // Création de thread qui envoi un message à un client
			while(true) 
			{
				String Cuu
				String commande = null;
				try 
				{
					DataInputStream in = new DataInputStream(socket.getInputStream());
					while(commande == null)
						commande = in.readUTF(); 
					System.out.format("%s \n", commande);
					
					try 
					{
						DataOutputStream out = new DataOutputStream(socket.getOutputStream());
						out.writeUTF("ok");
					}
					catch (IOException e) {
						System.out.println("erreur de communication");
						break;
					}
				}
				catch (IOException e) {
					System.out.println("erreur de communication");
					break;
				}
				
				
			}
	
	}
}